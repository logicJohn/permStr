//requires two strings in an object txt.{first:"", second:""}
//test to see if the txt.second is a permutation of txt.first
// mista-j

//This will run a permutation test at a given position of string one
//  returns boolean
function permTest( txt, pos1, pos2)
{
	console.log(pos1);
	console.log(pos2);
		if( pos2 > txt.second.length-1)
		{
			return true;
		}
	
		else if( txt.second.charAt(pos2) == txt.first.charAt(pos1+pos2))
		{
			return permTest( txt, pos1, pos2+1);
		}
		else
		{
			return false;
		}
}

//this will search txt.first for the first char of txt.second
// if found will run permTest to test the permutation
// returns true if permTest finds a permutation,
// returns false if all permTest are negative and/or all txt.first chars != txt.second.charAt(0)
function checkPermutation( txt )
{
	var test=false;
	var pos1= 0;
	var pos2= 0;
	while(!test)
	{
		if( pos1 > txt.first.length-txt.second.length )
		{
			return false;
		}		
		else if( txt.first.charAt(pos1) == txt.second.charAt(pos2) )
		{
			test = permTest( txt, pos1, pos2 + 1);
		}
		
		pos1++;
	}
	
	return test;
}


var txt = {first: "Hello World", second: "Wor"};  //this program runs on the requirements of this object
var test=checkPermutation(txt);

if(test)
{
	console.log(" permutation exist ");
}
else
{
	console.log( " permutation does not exist ");
}